version: '3.5'
services:
  redis:
    image: redis:4.0.10
    ports:
      - 6379:6379
    volumes:
      - .docker/data/redis:/data
  sonarr:
    image: linuxserver/sonarr
    ports:
      - 8989:8989
    environment: 
      PUID: 0
      PGID: 0
      TZ: "Europe/Warsaw"
    volumes:
      - .docker/data/sonarr:/config
      - /mnt/MoviesAndTV:/tv
      - /home/downloads:/downloads
  transmission:
    image: linuxserver/transmission:latest
    restart: unless-stopped
    ports:
      - 8112:9091
      - 51413:51413/udp
    environment: 
      PUID: 0
      PGID: 0
      TZ: "Europe/Warsaw"
    volumes:
      - .docker/data/transmission:/config
      - /mnt:/data
      - /mnt/MoviesAndTV:/tv
      - /home/downloads:/downloads
  calendar:
    image: nextcloud:latest
    ports:
      - 4111:80
    env_file:
      - '.env.nextcloud'
    volumes:
      - .docker/data/nextcloud:/var/www/html
  plex:
    network_mode: host
    image: plexinc/pms-docker
    env_file:
      - .env.plex
    volumes: 
      - .docker/data/plex/config:/config
      - .docker/data/plex/transcode:/transcode
      - /mnt:/data
  mqtt:
    restart: unless-stopped
    image: eclipse-mosquitto:latest
    ports:
      - 0.0.0.0:4105:1883
    volumes:
      - .docker/data/mosquitto:/mosquitto/data
      - .docker/log/mosquitto.log:/mosquitto/log/mosquitto.log
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
  influxdb:
    restart: unless-stopped
    image: influxdb:latest
    ports:
      - "0.0.0.0:8086:8086"
    volumes:
      - .docker/data/influxdb:/var/lib/influxdb
    env_file:
      - '.env.influxdb'
  database:
    image: postgres:9.6.10-alpine
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
    ports:
      - 0.0.0.0:4101:5432
    environment:
      PGDATA: /data
    env_file:
      - '.env.postgresql'
    volumes:
      - ./postgresql/:/docker-entrypoint-initdb.d/
      - .docker/data/postgresql:/data
  sonoff:
    build: ./sonoff/
    network_mode: host
  home-assistant:
    build: ./home-assistant/
    extra_hosts:
      - "outside:${HOME_ASSISTANT_IP}"
    env_file:
      - '.env.home-assistant'
      - '.env.influxdb'
      - '.env.local'
    restart: unless-stopped
    cap_add:
      - net_bind_service
    privileged: true
    network_mode: host
    environment:
      - TZ=Europe/Warsaw
      - HOME_ASSISTANT_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:4101/${POSTGRES_DB}
    depends_on:
      - sonoff
      - transmission
      - sonarr
      - plex
      - calendar
      - glances
      - pihole
      - mqtt
      - influxdb
      - database
    volumes:
      - ./home-assistant:/config
      - /var/log/fail2ban.log:/fail2ban/fail2ban.log:ro
      - /tmp:/tmp
    devices:
      - ${HOME_ASSISTANT_ZWAVE_DEV}:/dev/ttyACM0
  appdaemon:
    image: acockburn/appdaemon:latest
    restart: unless-stopped
    network_mode: host
    env_file:
      - '.env.home-assistant'
    environment:
      - HA_URL=http://localhost:8123
      - TOKEN=${HOME_ASSISTANT_API_PASSWORD}
      - DASH_URL=http://localhost:15050
    volumes:
      - ./appdaemon:/conf
  grafana:
    image: grafana/grafana:5.4.2
    restart: unless-stopped
    user: "472"
    env_file:
      - '.env.grafana'
      - '.env.influxdb'
      - '.env.local'
    environment:
      GF_SERVER_DOMAIN: "${HOME_ASSISTANT_DOMAIN}"
      GF_SERVER_ROOT_URL: "https://${HOME_ASSISTANT_DOMAIN}/grafana/"
    ports:
      - "127.0.0.1:4100:3000"
    volumes:
      - .docker/data/grafana:/var/lib/grafana
    depends_on:
      - influxdb
  pihole:
    restart: unless-stopped
    image: pihole/pihole:latest
    volumes:
      - ./.docker/data/pihole/pihole:/etc/pihole
      - ./.docker/data/pihole/dnsmasq.d:/etc/dnsmasq.d/
    cap_add:
      - NET_ADMIN
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "4104:80/tcp"
    dns:
      - 127.0.0.1
    env_file:
      - '.env.pihole'
      - '.env.local'
    environment:
      VIRTUAL_HOST: https://${HOME_ASSISTANT_DOMAIN}/pihole/
      PROXY_LOCATION: pihole
      VIRTUAL_PORT: 443
      ServerIP: 192.168.1.12
  glances:
    restart: unless-stopped
    image: nicolargo/glances
    environment:
      - GLANCES_OPT=-w
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./glances/:/glances/conf/
    ports:
      - 4108:61208
  ytdl:
    restart: unless-stopped
    image: macbury/yt-music-download-helper:latest
    ports:
      - 9292:9292
    volumes:
      - /tmp:/download
      - /mnt/Music:/output
  vacuum:
    build: ./vacuum/
    volumes:
      - .docker/data/vacuum:/app/public
    ports:
      - 10005:3000
  busix:
    image: macbury/busix:latest
    ports:
      - 10008:5000
    env_file:
      - '.env.busix'
    depends_on:
      - redis
  firefly:
    image: jc5x/firefly-iii:latest
    ports:
      - 10001:80
    volumes:
      - .docker/data/firefly-iii/export:/var/www/firefly-iii/storage/export
      - .docker/data/firefly-iii/upload:/var/www/firefly-iii/storage/upload
    env_file:
      - '.env.postgresql'
      - '.env.firefly'
  dpodcast:
    image: macbury/dpodcast:latest
    ports: 
      - 10015:5000
    volumes:
      - .docker/data/dpodcast:/app/data
    env_file:
      - .env.dpodcast
    depends_on:
      - redis
  # bt-mqtt-gateway:
  #   build: ./bt-mqtt-gateway/
  #   privileged: true
  #   env_file:
  #     - '.env.home-assistant'
  #   depends_on:
  #     - mqtt
  #   volumes:
  #     - ./bt-mqtt-gateway/config.yaml:/opt/bt-mqtt-gateway/config.yaml
